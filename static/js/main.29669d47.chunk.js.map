{"version":3,"sources":["redux/user/user-types.js","redux/user/user-reducer.jsx","redux/account/account-types.js","redux/account/account-utils.js","redux/account/account-reducer.jsx","redux/root-reducer.js","redux/store.js","redux/user/user-actions.js","redux/account/account-action.js","components/sign-in/sign-in-component.jsx","pages/sign-in/sign-in-page.jsx","components/header/header-component.jsx","components/account/account-add-component.jsx","components/account/account-list-component.jsx","components/footer/footer-component.jsx","pages/account/account-page.jsx","App.js","reportWebVitals.js","index.js"],"names":["UserActionTypes","INITIAL_STATE","currentUser","userReducer","state","action","type","payload","AccountActionTypes","addItemtoAccount","accountItems","accountItemToAdd","accountReducer","combineReducers","user","account","middleWares","logger","store","createStore","rootReducer","applyMiddleware","setCurrentUser","addAccountItem","aItem","SignIn","props","handleChange","e","target","name","value","setState","handleSubmit","a","preventDefault","params","email","password","fetch","method","headers","body","JSON","stringify","then","response","json","loggedusers","length","Error","localStorage","setItem","history","push","catch","error","className","this","message","placeholder","onChange","required","onClick","React","Component","connect","dispatch","withRouter","SignInPage","getItem","to","Header","users","parse","href","removeItem","icon","faSignOutAlt","AccountAdd","onChangeAlphaNumericInput","match","accountname","accounttype","accountdate","label","id","faPlus","AccountList","openModal","acctid","acctname","getTransactions","isOpen","thisacctname","closeModal","accountdata","transactiondata","fullscreen","map","v","i","aid","Table","striped","bordered","hover","faExchangeAlt","colSpan","Modal","show","onHide","closeButton","Title","Body","v1","i1","date","desc","debit","credit","balance","status","Footer","AccountPage","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29669d47.chunk.js","sourcesContent":["export const UserActionTypes={\r\n    SET_CURRENT_USER:'SET_CURRENT_USER'\r\n}","import { UserActionTypes } from \"./user-types\";\r\nconst INITIAL_STATE = {\r\n    currentUser: null\r\n}\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case UserActionTypes.SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default userReducer;","export const AccountActionTypes = {\r\n    ADD_ACCOUNT_ITEM: 'ADD_ACCOUNT_ITEM'\r\n\r\n}","export const addItemtoAccount = (accountItems, accountItemToAdd) =>{\r\n    return [...accountItems, {...accountItemToAdd}]\r\n}","import {AccountActionTypes} from \"./account-types\";\r\nimport { addItemtoAccount } from \"./account-utils\";\r\n\r\nconst INITIAL_STATE = {\r\n    accountItems: []\r\n}\r\nconst accountReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case AccountActionTypes.ADD_ACCOUNT_ITEM:\r\n            return {\r\n                ...state,\r\n                accountItems: addItemtoAccount(state.accountItems, action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default accountReducer;","import { combineReducers } from \"redux\";\r\n\r\nimport userReducer from \"./user/user-reducer\";\r\nimport accountReducer from \"./account/account-reducer\";\r\n\r\nexport default combineReducers({\r\n    user: userReducer,\r\n    account: accountReducer\r\n})","import {createStore, applyMiddleware} from 'redux';\r\n\r\nimport logger from 'redux-logger';\r\n\r\nimport rootReducer from './root-reducer';\r\n\r\nconst middleWares = [logger];\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middleWares))\r\n\r\nexport default store; ","import { UserActionTypes } from \"./user-types\";\r\n\r\nexport const setCurrentUser = user => ({\r\n    type: UserActionTypes.SET_CURRENT_USER,\r\n    payload: user,\r\n});","import { AccountActionTypes } from \"./account-types\";\r\n\r\nexport const addAccountItem = aItem => ({\r\n    type: AccountActionTypes.ADD_ACCOUNT_ITEM,\r\n    payload: aItem\r\n});","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setCurrentUser } from '../../redux/user/user-actions';\r\n\r\nimport './sign-in-component.scss';\r\n\r\nclass SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            loggedusers: [],\r\n            error: null\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        const { name, value } = e.target;\r\n        //console.log(name + ':' + value);\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    handleSubmit = async e => {\r\n        e.preventDefault();\r\n\r\n        let params = {\r\n            \"email\": this.state.email,\r\n            \"password\": this.state.password\r\n        };\r\n        //console.log(JSON.stringify(params));\r\n        await fetch('https://g9v1e.mocklab.io/users', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(params)\r\n        })\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                this.setState({ loggedusers: response });\r\n                if (!this.state.loggedusers.length) {\r\n                    localStorage.setItem('anzuser', JSON.stringify(this.state.loggedusers));\r\n                    this.props.setCurrentUser(response);\r\n                    this.props.history.push('/anz-wholesale/account');\r\n                } else {\r\n                    if (this.state.loggedusers.length > 1) {\r\n                        throw new Error('Invalid Email or Password');\r\n                    } else {\r\n                        throw new Error('Something went wrong ...');\r\n                    }\r\n                }\r\n\r\n            })\r\n            .catch(error => this.setState({ error }));\r\n        //console.log(error.message)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sign-form-component\">\r\n                <form className=\"sign-form\">\r\n                    {this.state.error && <div className=\"error\"> {this.state.error.message} </div>}\r\n                    <input type=\"text\" placeholder=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} required />\r\n                    <input type=\"password\" placeholder=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} required />\r\n                    <button className=\"btn btn-success\" onClick={this.handleSubmit}>Sign In</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ user }) => ({\r\n    currentUser: user.currentUser\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setCurrentUser: user => dispatch(setCurrentUser(user))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SignIn));","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport './sign-in-page.scss';\r\n\r\nimport SignIn from '../../components/sign-in/sign-in-component';\r\n\r\nconst SignInPage = () => {\r\n    if (localStorage.getItem('anzuser')) {\r\n        return <Redirect to='/anz-wholesale/account' />\r\n    }\r\n    return(             \r\n    <div className='sign-in-page'>\r\n       <div className=\"sign-header\">\r\n            <h3>Sign In</h3>\r\n            <p>Please enter your credentials to login.</p>\r\n        </div>\r\n       <SignIn />\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default SignInPage;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './header-component.scss';\r\n\r\n\r\nconst Header = () => {\r\n\r\n    const logOut = () => {\r\n        localStorage.removeItem('anzuser');\r\n    };\r\n\r\n\r\n    const users = JSON.parse(localStorage.getItem('anzuser'));\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 fs-3 logotxt\">ANZ</div>\r\n                <div className=\"col-md-6 text-end welcometxt\"><span className=\"fw-bolder\">Welcome {users.name}</span> |  <a href=\"/anz-wholesale/\" onClick={logOut}>Logout <FontAwesomeIcon icon={faSignOutAlt} /></a></div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nimport { connect } from 'react-redux';\r\nimport { addAccountItem } from '../../redux/account/account-action';\r\n\r\nimport './account-component.scss';\r\n\r\nclass AccountAdd extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            accountname: '',\r\n            accounttype: '',\r\n            accountdate: [],\r\n            error: null\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        const { name, value } = e.target;\r\n        //console.log(name + ':' + value);\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    onChangeAlphaNumericInput = e => {\r\n        const { name, value } = e.target;\r\n        const regex = /^[0-9a-zA-Z]+$/; //this will admit letters, numbers and dashes\r\n        if (value.match(regex) || value === \"\") {\r\n            this.setState({ [name]: value })\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n    handleSubmit = async e => {\r\n        e.preventDefault();\r\n\r\n        if(this.state.accountname!=='' && this.state.accounttype!==''){       \r\n      \r\n            let params =  { \r\n                \"id\": (this.props.accountItems.length+1),           \r\n                \"name\": this.state.accountname, \r\n                \"accounttype\": this.state.accounttype\r\n            };\r\n\r\n            //console.log(params);\r\n\r\n            this.props.addAccountItem(params);\r\n           \r\n            this.setState({\r\n                accountname:'',\r\n                accounttype:''\r\n            })\r\n\r\n            //return <Redirect to='/anz-wholesale/account' />\r\n            this.props.history.push('/anz-wholesale/account');\r\n        }\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"account-add-form\">\r\n                <form method=\"post\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <input type=\"text\" className=\"form-control\" name=\"accountname\" placeholder=\"Name\" label=\"Name\" value={this.state.accountname} onChange={this.onChangeAlphaNumericInput} required />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <select name=\"accounttype\" id=\"accounttype\" className=\"form-select\" onChange={this.handleChange} value={this.state.accounttype} required>\r\n                                <option value=\"\">-- Select Account Type</option>\r\n                                <option value=\"savings\">Saving Account</option>\r\n                                <option value=\"creditcard\">Credit Card</option>\r\n                                <option value=\"debitcard\">Debit Card</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <button className=\"btn btn-primary\" onClick={this.handleSubmit}><FontAwesomeIcon icon={faPlus} /> Add New Account</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = ({ account: {accountItems} }) => ({\r\n    accountItems\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addAccountItem: aItem => dispatch(addAccountItem(aItem))\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AccountAdd));\r\n\r\n//export default withRouter(AccountAdd);","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faExchangeAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { addAccountItem } from '../../redux/account/account-action';\r\n\r\nimport './account-component.scss';\r\n\r\nimport AccountAdd from '../../components/account/account-add-component';\r\n\r\nclass AccountList extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            accountdata: [],\r\n            accountItems: [],\r\n            transactiondata: [],\r\n            isOpen: false,\r\n            fullscreen: true,\r\n            thisacctname: null,\r\n            error: null\r\n        }\r\n    }\r\n    openModal = (acctid, acctname) => {\r\n        this.getTransactions(acctid);\r\n        this.setState({ isOpen: true, thisacctname: acctname })\r\n    }\r\n\r\n    closeModal = () => this.setState({ isOpen: false });\r\n\r\n    async componentDidMount() {\r\n        this.setState({ accountItems: [] })\r\n        await fetch('https://g9v1e.mocklab.io/accounts', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\",\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                this.setState({ accountdata: response });\r\n                this.state.accountdata.map((v, i) => (\r\n                    this.props.addAccountItem(v)\r\n                ));\r\n\r\n                //console.log(this.props.accountItems);\r\n\r\n                if (!this.state.accountdata.length) {\r\n                    throw new Error('Something went wrong ...');\r\n                }\r\n\r\n            })\r\n            .catch(error => this.setState({ error }));\r\n        //console.log(error.message)\r\n    }\r\n\r\n    async getTransactions(aid) {\r\n        this.setState({\r\n            transactiondata: []\r\n        });\r\n        let params = {\r\n            \"id\": aid\r\n        };\r\n        if (aid > 2) {\r\n            params = {\r\n                \"new\": 1\r\n            };\r\n        }\r\n        //console.log(params);\r\n        await fetch('https://g9v1e.mocklab.io/transactions', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(params)\r\n        })\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                //console.log(response);\r\n                this.setState({ transactiondata: response });\r\n                if (!this.state.transactiondata.length) {\r\n                    throw new Error('Something went wrong ...');\r\n                }\r\n\r\n            })\r\n            .catch(error => this.setState({ error }));\r\n            //console.log(this.state.error)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"account\">\r\n                <AccountAdd />\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"col-sm-1\">#</th>\r\n                            <th>Name</th>\r\n                            <th className=\"col-md-4\">Account Type</th>\r\n                            <th className=\"col-sm-1\">Transaction</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {(() => {\r\n                            if (this.props.accountItems.length > 0) {\r\n                                return (\r\n                                    this.props.accountItems.map((v, i) => (\r\n                                        <tr key={i}>\r\n                                            <td>{v.id}</td>\r\n                                            <td>{v.name}</td>\r\n                                            <td>{v.accounttype}</td>\r\n                                            <td className=\"text-center\"><FontAwesomeIcon icon={faExchangeAlt} onClick={() => this.openModal(v.id, v.name)} /></td>\r\n                                        </tr>\r\n                                    ))\r\n                                )\r\n                            } else {\r\n                                return (\r\n                                    <tr>\r\n                                        <td colSpan=\"4\">No account found</td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n\r\n                        })()}\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <Modal\r\n                    show={this.state.isOpen} onHide={this.closeModal}\r\n                    fullscreen={this.state.fullscreen}\r\n                    aria-labelledby=\"transactionlist\"\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"transactionlist\">\r\n                            Transaction of {this.state.thisacctname}\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Table striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"col-sm-1\">#</th>\r\n                                    <th className=\"col-sm-1\">Date</th>\r\n                                    <th>Description</th>\r\n                                    <th className=\"col-sm-1\">Debit</th>\r\n                                    <th className=\"col-sm-1\">Credit</th>\r\n                                    <th className=\"col-sm-1\">Balance</th>\r\n                                    <th className=\"col-md-1\">Status</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {(() => {\r\n                                    if (this.state.transactiondata.length > 0) {\r\n                                        return (\r\n                                            this.state.transactiondata.map((v1, i1) => (\r\n                                                <tr key={i1}>\r\n                                                    <td>{i1 + 1}</td>\r\n                                                    <td>{v1.date}</td>\r\n                                                    <td>{v1.desc}</td>\r\n                                                    <td>{v1.debit}</td>\r\n                                                    <td>{v1.credit}</td>\r\n                                                    <td>{v1.balance}</td>\r\n                                                    <td>{v1.status}</td>\r\n                                                </tr>\r\n                                            ))\r\n                                        )\r\n                                    } else {\r\n                                        return (\r\n                                            <tr>\r\n                                                <td colSpan=\"7\">No transaction found</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                })()}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ account: { accountItems } }) => ({\r\n    accountItems\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addAccountItem: aItem => dispatch(addAccountItem(aItem))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountList);","import React from 'react';\r\n\r\nimport './footer-component.scss';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"text-center\"><small>Developed @ 2021</small></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport './account-page.scss';\r\n\r\nimport Header from '../../components/header/header-component';\r\nimport AccountList from '../../components/account/account-list-component';\r\nimport Footer from '../../components/footer/footer-component';\r\n\r\nconst AccountPage = () => {\r\n    if (!localStorage.getItem('anzuser')) {\r\n        return <Redirect to='/anz-wholesale/' />\r\n    }\r\n    return (        \r\n        <div>\r\n            <Header />\r\n            <div className=\"maincontent\">\r\n                <div className=\"fs-3 page-title\">Accounts</div>\r\n                <div className=\"container\">                \r\n                    <AccountList />\r\n                </div>   \r\n            </div>        \r\n            <Footer />\r\n        </div>       \r\n    );\r\n}\r\nexport default AccountPage;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { setCurrentUser } from './redux/user/user-actions';\nimport { addAccountItem } from './redux/account/account-action';\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\n\nimport SignInPage from './pages/sign-in/sign-in-page';\nimport AccountPage from './pages/account/account-page';\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path='/anz-wholesale/' component={SignInPage} />\n        <Route exact path='/anz-wholesale/account' component={AccountPage} />\n      </Switch>\n    );\n  }\n}\n\nconst mapStateToProps = ({ user, account }) => ({\n  currentUser: user.currentUser,\n  accountItems: []\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user)),\n  addAccountItem: accountItems => dispatch(addAccountItem(accountItems))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter} from 'react-router-dom';\nimport { Provider} from 'react-redux';\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter><App /></BrowserRouter>\n    </Provider>,  \n    document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}